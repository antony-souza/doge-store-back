generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now()) @map(name: "created_at")
  updatedAt DateTime   @default(now()) @map(name: "updated_at")
  category  Category[]

  storeConfig              StoreAndStoreConfig[]
  Product                  Product[]
  ProductAndAddtionalDishe ProductAndAddtionalDishe[]

  @@map("store")
}

model StoreConfig {
  id              String   @id @default(uuid())
  name            String
  image           String
  description     String
  isOpen          Boolean  @default(true)
  address         String
  backgroundColor String
  createdAt       DateTime @default(now()) @map(name: "created_at")
  updatedAt       DateTime @default(now()) @map(name: "updated_at")

  store StoreAndStoreConfig[]

  @@map("store_configs")
}

model StoreAndStoreConfig {
  id            String      @id @default(uuid())
  storeId       String      @unique
  store         Store       @relation(fields: [storeId], references: [id])
  storeConfigId String      @unique
  storeConfig   StoreConfig @relation(fields: [storeConfigId], references: [id])
  createdAt     DateTime    @default(now()) @map(name: "created_at")
  updatedAt     DateTime    @default(now()) @map(name: "updated_at")

  @@map("store_and_store_configs")
}

model Category {
  id        String    @id @default(uuid())
  enabled   Boolean   @default(true)
  name      String
  image_url String[]  @default([])
  product   Product[]
  store_id  String
  store     Store     @relation(fields: [store_id], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Product {
  id                       String                     @id @default(uuid())
  enabled                  Boolean                    @default(true)
  image_url                String[]                   @default([])
  name                     String
  description              String?
  price                    Float
  category_id              String
  store_id                 String
  store                    Store                      @relation(fields: [store_id], references: [id])
  category                 Category                   @relation(fields: [category_id], references: [id])
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @default(now())
  ProductAndAddtionalDishe ProductAndAddtionalDishe[]

  @@map("product")
}

model AdditionalDishe {
  id                       String                     @id @default(uuid())
  enabled                  Boolean                    @default(true)
  image_url                String[]                   @default([])
  name                     String
  description              String
  price                    Float
  store_id                 String
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @default(now())
  ProductAndAddtionalDishe ProductAndAddtionalDishe[]

  @@map("additional_dishe")
}

model ProductAndAddtionalDishe {
  id                 String          @id @default(uuid())
  enabled            Boolean         @default(true)
  store_id           String
  product_id         String
  additional_dish_id String
  store              Store           @relation(fields: [store_id], references: [id])
  product            Product         @relation(fields: [product_id], references: [id])
  additionalDish     AdditionalDishe @relation(fields: [additional_dish_id], references: [id])
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @default(now())

  @@map("product_additional_dishe")
}
